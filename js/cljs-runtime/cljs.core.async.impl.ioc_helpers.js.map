{"version":3,"sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":"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","names":["cljs.core.async.impl.ioc-helpers/FN-IDX","cljs.core.async.impl.ioc-helpers/STATE-IDX","cljs.core.async.impl.ioc-helpers/VALUE-IDX","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/aset-object","arr","idx","o","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/finished?","state-array","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/fn-handler","f","js/cljs","js/cljs.core","js/cljs.core.async","js/cljs.core.async.impl","js/cljs.core.async.impl.ioc-helpers","js/cljs.core.async.impl.ioc-helpers.t_cljs$core$async$impl$ioc_helpers64477","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers64477","_64479","meta64478","cljs.core/PROTOCOL_SENTINEL","this__5327__auto__","writer__5328__auto__","opt__5329__auto__","cljs.core/-write","cljs.core.async.impl.ioc-helpers/->t_cljs$core$async$impl$ioc_helpers64477","_","cljs.core.async.impl.ioc-helpers/run-state-machine","state","fexpr__64508","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","e64513","js/Object","ex","cljs.core.async.impl.ioc-helpers/take!","blk","c","temp__5802__auto__","cb","x","statearr-64522","statearr-64523","cljs.core/deref","cljs.core.async.impl.ioc-helpers/put!","val","ret-val","statearr-64524","statearr-64525","cljs.core.async.impl.ioc-helpers/return-chan","value","this__5340__auto__","k__5341__auto__","this__5342__auto__","k64536","else__5343__auto__","G__64540","cljs.core/Keyword","catch-block","catch-exception","finally-block","continue-block","prev","cljs.core.get","__extmap","this__5360__auto__","f__5361__auto__","init__5362__auto__","cljs.core.reduce","ret__5363__auto__","p__64541","vec__64542","k__5364__auto__","cljs.core.nth","v__5365__auto__","this__5355__auto__","writer__5356__auto__","opts__5357__auto__","pr-pair__5358__auto__","keyval__5359__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__64535","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5338__auto__","__meta","this__5335__auto__","__hash","this__5344__auto__","cljs.core/count","this__5336__auto__","h__5152__auto__","coll__5337__auto__","cljs.core/hash-unordered-coll","this64537","other64538","cljs.core._EQ_","this__5350__auto__","k__5351__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5347__auto__","G__64560","this__5348__auto__","k__5349__auto__","pred__64564","expr__64565","cljs.core.assoc","this__5353__auto__","cljs.core/seq","cljs.core/MapEntry","this__5339__auto__","this__5345__auto__","entry__5346__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","cljs.core.async.impl.ioc-helpers/ExceptionFrame","this__5386__auto__","cljs.core/List","writer__5387__auto__","G__64539","extmap__5382__auto__","G__64571","cljs.core/record?","cljs.core.async.impl.ioc-helpers/->ExceptionFrame","cljs.core.async.impl.ioc-helpers/map->ExceptionFrame","cljs.core.async.impl.ioc-helpers/add-exception-frame","statearr-64572","cljs.core.async.impl.ioc-helpers/process-exception","exception-frame","exception","and__5041__auto__","cljs.core/not","statearr-64573","statearr-64574","statearr-64575","statearr-64576","statearr-64577","js/Error"],"sourcesContent":["(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [] nil))))\n           (impl/close! c)\n           c))\n\n(defrecord ExceptionFrame [catch-block\n                           ^Class catch-exception\n                           finally-block\n                           continue-block\n                           prev])\n\n(defn add-exception-frame [state catch-block catch-exception finally-block continue-block]\n  (ioc/aset-all! state\n                 EXCEPTION-FRAMES\n                 (->ExceptionFrame catch-block\n                                   catch-exception\n                                   finally-block\n                                   continue-block\n                                   (aget-object state EXCEPTION-FRAMES))))\n\n(defn process-exception [state]\n  (let [exception-frame (aget-object state EXCEPTION-FRAMES)\n        catch-block (:catch-block exception-frame)\n        catch-exception (:catch-exception exception-frame)\n        exception (aget-object state CURRENT-EXCEPTION)]\n    (cond\n     (and exception\n          (not exception-frame))\n     (throw exception)\n\n     (and exception\n          catch-block\n          (or (= :default catch-exception)\n              (instance? catch-exception exception)))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    catch-block\n                    VALUE-IDX\n                    exception\n                    CURRENT-EXCEPTION\n                    nil\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :catch-block nil\n                      :catch-exception nil))\n\n\n     (and exception\n          (not catch-block)\n          (not (:finally-block exception-frame)))\n\n     (do (ioc/aset-all! state\n                        EXCEPTION-FRAMES\n                        (:prev exception-frame))\n         (recur state))\n\n     (and exception\n          (not catch-block)\n          (:finally-block exception-frame))\n     (ioc/aset-all! state\n                    STATE-IDX\n                    (:finally-block exception-frame)\n                    EXCEPTION-FRAMES\n                    (assoc exception-frame\n                      :finally-block nil))\n\n     (and (not exception)\n          (:finally-block exception-frame))\n     (do (ioc/aset-all! state\n                        STATE-IDX\n                        (:finally-block exception-frame)\n                        EXCEPTION-FRAMES\n                        (assoc exception-frame\n                          :finally-block nil)))\n\n     (and (not exception)\n          (not (:finally-block exception-frame)))\n     (do (ioc/aset-all! state\n                   STATE-IDX\n                   (:continue-block exception-frame)\n                   EXCEPTION-FRAMES\n                   (:prev exception-frame)))\n\n     :else (throw (js/Error. \"No matching clause\")))))\n"]}